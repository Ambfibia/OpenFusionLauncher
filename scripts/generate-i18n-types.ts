import fs from "fs/promises";
import path from "path";

async function main() {
  const localesDir = path.resolve(__dirname, "..", "resources", "locales");
  const files = await fs.readdir(localesDir);
  const keys = new Set<string>();

  for (const file of files) {
    if (!file.endsWith(".json")) continue;
    const content = await fs.readFile(path.join(localesDir, file), "utf8");
    const data = JSON.parse(content) as Record<string, unknown>;
    for (const key of Object.keys(data)) {
      keys.add(key);
    }
  }

  const sorted = Array.from(keys).sort((a, b) => a.localeCompare(b));
  const lines: string[] = [];
  lines.push("// This file is auto-generated by scripts/generate-i18n-types.ts");
  lines.push("// Do not edit this file directly.");
  lines.push("");
  lines.push("export type TranslationKey =");
  for (const key of sorted) {
    lines.push(`  | ${JSON.stringify(key)}`);
  }
  lines.push(";");
  lines.push("");

  const outPath = path.resolve(__dirname, "..", "app", "i18n-keys.d.ts");
  await fs.writeFile(outPath, lines.join("\n"));
}

main().catch((err) => {
  console.error(err);
  process.exit(1);
});

